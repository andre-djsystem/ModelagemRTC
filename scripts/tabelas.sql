/* ===========================================================
   REFORMA TRIBUTÁRIA (RTC) - PACOTE COMPLETO PARA FIREBIRD 
   cClassTrib - Modelagem + Funções + Procedures + Exemplos
   -----------------------------------------------------------
   Componentes:
     1) Tabela oficial: CCLASSTRIB_OFICIAL (espelho RFB)
     2) Tabelas de negócio: TOP, PRODUTO, TOP_PRODUTO, NCM_CCLASSTRIB
     3) Funções utilitárias: VALIDA_VIGENCIA, VALIDA_MODELO
     4) Procedure auxiliar:  VALIDA_CCLASSTRIB
     5) Procedure para obter o cClassTrib: RESOLVE_CCLASSTRIB
     5) Procedure para procurar o cClassTrib pelo NCM: CCLASSTRIB_POR_NCM
        -----------------------------------------------------------
   Política:
     - Sem hardcode de regra — tudo orientado por dados.
     - Se nada casar, RESOLVE_CCLASSTRIB retorna NULL e o chamador decide
       (usar '000001' ou lançar exception).
   =========================================================== */

SET SQL DIALECT 3;
SET NAMES UTF8;

/* =========================
   0) (Opcional) Drops
   ========================= */
-- COMENTE os DROPs caso já existam dados em produção
/* 
DROP PROCEDURE RESOLVE_CCLASSTRIB;
DROP PROCEDURE VALIDA_CCLASSTRIB;
DROP FUNCTION VALIDA_MODELO;
DROP FUNCTION VALIDA_VIGENCIA;

DROP TABLE NCM_CCLASSTRIB;
DROP TABLE TOP_PRODUTO;
DROP TABLE PRODUTO;
DROP TABLE TOP;
DROP TABLE CCLASSTRIB_OFICIAL;
*/

/* =========================
   1) TABELA OFICIAL (espelho)
   ========================= */
CREATE TABLE CCLASSTRIB_OFICIAL (
    CCLASSTRIB           VARCHAR(7) PRIMARY KEY,   -- ex.: '200003'
    CST_IBSCBS           VARCHAR(10),              -- CST-IBS/CBS
    DESCR_CST_IBSCBS     VARCHAR(255),             -- Descrição CST-IBS/CBS
    NOME_CCLASSTRIB      VARCHAR(255),             -- Nome cClassTrib
    DESCR_CCLASSTRIB     BLOB SUB_TYPE TEXT,       -- Descrição completa
    LC_REDACAO           BLOB SUB_TYPE TEXT,       -- Redação (LC)
    LC_214_25            BLOB SUB_TYPE TEXT,       -- Referência LC 214/25
    TIPO_ALIQUOTA        VARCHAR(50),              -- Tipo da alíquota
    PREDIBS              NUMERIC(5,2),             -- Redução IBS (%)
    PREDCBS              NUMERIC(5,2),             -- Redução CBS (%)
    IND_REDUCAO_BC       SMALLINT,                 -- 0/1
    IND_GTRIB_REGULAR    SMALLINT,
    IND_GCRED_PRESOPER   SMALLINT,
    IND_GMONO_PADRAO     SMALLINT,
    IND_GMONO_RETEN      SMALLINT,
    IND_GMONO_RET        SMALLINT,
    IND_GMONO_DIF        SMALLINT,
    IND_GESTORNO_CRED    SMALLINT,
    CREDITO_PARA         BLOB SUB_TYPE TEXT,
    DINIVIG              DATE,                     -- Início vigência
    DFIMVIG              DATE,                     -- Fim vigência
    DATA_ATUALIZACAO     DATE,
    IND_NFE_ABI          SMALLINT,
    IND_NFE              SMALLINT,
    IND_NFCE             SMALLINT,
    IND_CTE              SMALLINT,
    IND_CTEOS            SMALLINT,
    IND_BPE              SMALLINT,
    IND_BPETA            SMALLINT,
    IND_BPETM            SMALLINT,
    IND_NF3E             SMALLINT,
    IND_NFSE             SMALLINT,
    IND_NFSE_VIA         SMALLINT,
    IND_NFCOM            SMALLINT,
    IND_NFAG             SMALLINT,
    IND_NFGAS            SMALLINT,
    IND_DERE             SMALLINT,
    ANEXO                VARCHAR(50),
    LINK                 VARCHAR(500)
);

CREATE INDEX IX_CCLASSTRIB_VIG ON CCLASSTRIB_OFICIAL (DINIVIG, DFIMVIG);

/* =========================
   2) Tabelas de Negócio
   ========================= */
CREATE TABLE TOP (
  ID_TOP     INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  DESCRICAO  VARCHAR(100),
  CCLASSTRIB VARCHAR(6) REFERENCES CCLASSTRIB_OFICIAL(CCLASSTRIB)-- se preenchido, override global da operação
);

CREATE TABLE NCM_CCLASSTRIB (
  NCM         VARCHAR(10) NOT NULL,
  REGRA_RTC   VARCHAR(30) NOT NULL,
  CCLASSTRIB  VARCHAR(6)  NOT NULL 
              REFERENCES CCLASSTRIB_OFICIAL(CCLASSTRIB),
  ANEXO       INTEGER,
  ARTIGO      INTEGER,
  CONSTRAINT PK_NCM_CCLASSTRIB PRIMARY KEY (NCM, REGRA_RTC)
);

CREATE INDEX IX_NCM_CCT_NCM   ON NCM_CCLASSTRIB (NCM);
CREATE INDEX IX_NCM_CCT_ANEXO ON NCM_CCLASSTRIB (REGRA_RTC);

CREATE TABLE PRODUTO (
  ID_PRODUTO  INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  DESCRICAO   VARCHAR(255),
  NCM         VARCHAR(10),
  REGRA_RTC   VARCHAR(30)-- 'ANEXO_I', 'ANEXO_IX', 'TRIBUTACAO_INTEGRAL', etc.
);

CREATE TABLE TOP_PRODUTO (
  ID_TOP      INTEGER NOT NULL,
  ID_PRODUTO  INTEGER NOT NULL,
  CCLASSTRIB  VARCHAR(6) NOT NULL,
  CONSTRAINT PK_TOP_PRODUTO PRIMARY KEY (ID_TOP, ID_PRODUTO),
  CONSTRAINT FK_TP_TOP  FOREIGN KEY (ID_TOP)     REFERENCES TOP(ID_TOP),
  CONSTRAINT FK_TP_PROD FOREIGN KEY (ID_PRODUTO) REFERENCES PRODUTO(ID_PRODUTO),
  CONSTRAINT FK_TP_CCT  FOREIGN KEY (CCLASSTRIB) REFERENCES CCLASSTRIB_OFICIAL(CCLASSTRIB)
);

CREATE INDEX IX_TP_TOP  ON TOP_PRODUTO (ID_TOP);
CREATE INDEX IX_TP_PROD ON TOP_PRODUTO (ID_PRODUTO);

/* =========================
   3) Funções utilitárias
   ========================= */
CREATE OR ALTER FUNCTION VALIDA_VIGENCIA(
  P_DATA_EMISSAO DATE,
  P_DINIVIG      DATE,
  P_DFIMVIG      DATE
) RETURNS SMALLINT
AS
BEGIN
  IF ((P_DINIVIG IS NOT NULL) AND (P_DATA_EMISSAO < P_DINIVIG)) THEN RETURN 0;
  IF ((P_DFIMVIG IS NOT NULL) AND (P_DATA_EMISSAO > P_DFIMVIG)) THEN RETURN 0;
  RETURN 1;
END;

CREATE OR ALTER FUNCTION VALIDA_MODELO(
  P_MODELO_DF VARCHAR(10),
  P_IND_NFE   SMALLINT,
  P_IND_NFCE  SMALLINT,
  P_IND_NFSE  SMALLINT
) RETURNS SMALLINT
AS
DECLARE VARIABLE V_MODO VARCHAR(10);
BEGIN
  V_MODO = UPPER(P_MODELO_DF);
  IF (V_MODO = 'NFE'  AND COALESCE(P_IND_NFE,  0)=1) THEN RETURN 1;
  IF (V_MODO = 'NFCE' AND COALESCE(P_IND_NFCE, 0)=1) THEN RETURN 1;
  IF (V_MODO = 'NFSE' AND COALESCE(P_IND_NFSE, 0)=1) THEN RETURN 1;
  RETURN 0;
END;

/* =========================
   4) Auxiliar de validação
   ========================= */
SET TERM ^ ;
CREATE OR ALTER PROCEDURE VALIDA_CCLASSTRIB (
    P_CCLASSTRIB   VARCHAR(6),
    P_DATA_EMISSAO DATE,
    P_MODELO_DF    VARCHAR(10)
)
RETURNS (
    R_OK       SMALLINT,      -- 1 válido, 0 inválido
    R_CST      VARCHAR(3),
    R_PREDIBS  NUMERIC(5,2),
    R_PREDCBS  NUMERIC(5,2)
)
AS
DECLARE VARIABLE V_DINI     DATE;
DECLARE VARIABLE V_DFIM     DATE;
DECLARE VARIABLE V_IND_NFE  SMALLINT;
DECLARE VARIABLE V_IND_NFCE SMALLINT;
DECLARE VARIABLE V_IND_NFSE SMALLINT;
BEGIN
  R_OK = 0; R_CST = NULL; R_PREDIBS = NULL; R_PREDCBS = NULL;

  SELECT DINIVIG, DFIMVIG, IND_NFE, IND_NFCE, IND_NFSE, PREDIBS, PREDCBS
    FROM CCLASSTRIB_OFICIAL
   WHERE CCLASSTRIB = :P_CCLASSTRIB
    INTO :V_DINI, :V_DFIM, :V_IND_NFE, :V_IND_NFCE, :V_IND_NFSE, :R_PREDIBS, :R_PREDCBS;

  IF ( VALIDA_VIGENCIA(:P_DATA_EMISSAO, :V_DINI, :V_DFIM) = 1
       AND VALIDA_MODELO(:P_MODELO_DF, :V_IND_NFE, :V_IND_NFCE, :V_IND_NFSE) = 1 ) THEN
  BEGIN
    R_OK  = 1;
    R_CST = SUBSTRING(P_CCLASSTRIB FROM 1 FOR 3);
  END

  SUSPEND;
END^
SET TERM ; ^

/* =========================
   5) Procedure para obter o cClassTrib correto
   ========================= */
SET TERM ^ ;
CREATE OR ALTER PROCEDURE RESOLVE_CCLASSTRIB (
    P_ID_TOP       INTEGER,
    P_ID_PRODUTO   INTEGER,
    P_DATA_EMISSAO DATE,
    P_MODELO_DF    VARCHAR(10)
)
RETURNS (
    R_CCLASSTRIB   VARCHAR(6),   -- pode ser NULL se nada casar
    R_CST          VARCHAR(3),
    R_FONTE        VARCHAR(20),  -- 'TOP' | 'TOP_PRODUTO' | 'NCM' | 'NONE'
    R_PREDIBS      NUMERIC(5,2),
    R_PREDCBS      NUMERIC(5,2)
)
AS
DECLARE VARIABLE V_CCT_CAND   VARCHAR(6);
DECLARE VARIABLE V_FONTE_CAND VARCHAR(20);
DECLARE VARIABLE V_OK         SMALLINT;
DECLARE VARIABLE V_CST_TMP    VARCHAR(3);
DECLARE VARIABLE V_RED_IBS    NUMERIC(5,2);
DECLARE VARIABLE V_RED_CBS    NUMERIC(5,2);
BEGIN
  R_CCLASSTRIB = NULL; R_CST = NULL; R_FONTE = 'NONE';
  R_PREDIBS = NULL; R_PREDCBS = NULL;

  FOR
    SELECT CCT, FONTE
    FROM (
      SELECT t.CCLASSTRIB AS CCT, 'TOP' AS FONTE, 1 AS ORD
        FROM TOP t
       WHERE t.ID_TOP = :P_ID_TOP
         AND t.CCLASSTRIB IS NOT NULL

      UNION ALL

      SELECT tp.CCLASSTRIB AS CCT, 'TOP_PRODUTO' AS FONTE, 2 AS ORD
        FROM TOP_PRODUTO tp
       WHERE tp.ID_TOP = :P_ID_TOP
         AND tp.ID_PRODUTO = :P_ID_PRODUTO

      UNION ALL

      SELECT r.CCLASSTRIB AS CCT, 'NCM' AS FONTE, 3 AS ORD
        FROM PRODUTO p
        JOIN NCM_CCLASSTRIB r
          ON r.NCM = p.NCM
         AND r.REGRA_RTC = p.REGRA_RTC
       WHERE p.ID_PRODUTO = :P_ID_PRODUTO
    )
    ORDER BY ORD
    INTO :V_CCT_CAND, :V_FONTE_CAND
  DO
  BEGIN
    EXECUTE PROCEDURE VALIDA_CCLASSTRIB(:V_CCT_CAND, :P_DATA_EMISSAO, :P_MODELO_DF)
      RETURNING_VALUES :V_OK, :V_CST_TMP, :V_RED_IBS, :V_RED_CBS;

    IF (V_OK = 1) THEN
    BEGIN
      R_CCLASSTRIB = V_CCT_CAND;
      R_CST        = V_CST_TMP;
      R_FONTE      = V_FONTE_CAND;
      R_PREDIBS    = V_RED_IBS;
      R_PREDCBS    = V_RED_CBS;
      SUSPEND; EXIT;  -- primeiro válido
    END
  END

  -- nada aplicável: devolve NULL e o chamador decide
  SUSPEND;
END^
SET TERM ; ^

/* =========================
   5) Procura cClassTrib por NCM
   ========================= */
SET TERM ^ ;
CREATE OR ALTER PROCEDURE CCLASSTRIB_POR_NCM (
    P_NCM VARCHAR(10)
)
RETURNS (
    R_REGRA_RTC VARCHAR(30),
    R_CCLASSTRIB VARCHAR(6),
    R_CST VARCHAR(3),
    R_PREDIBS NUMERIC(5,2),
    R_PREDCBS NUMERIC(5,2),
    R_VIGENCIA_INI DATE,
    R_VIGENCIA_FIM DATE,
    R_LC_REDACAO BLOB SUB_TYPE TEXT
)
AS
DECLARE VARIABLE V_OK SMALLINT;
DECLARE VARIABLE V_CST_TMP VARCHAR(3);
DECLARE VARIABLE V_RED_IBS NUMERIC(5,2);
DECLARE VARIABLE V_RED_CBS NUMERIC(5,2);
BEGIN
  FOR
    SELECT 
      r.REGRA_RTC,
      r.CCLASSTRIB,
      o.DINIVIG,
      o.DFIMVIG,
      o.PREDIBS,
      o.PREDCBS,
      o.LC_REDACAO
    FROM NCM_CCLASSTRIB r
    LEFT JOIN CCLASSTRIB_OFICIAL o
      ON o.CCLASSTRIB = r.CCLASSTRIB
    WHERE r.NCM = :P_NCM
    ORDER BY COALESCE(r.REGRA_RTC, ''), r.CCLASSTRIB
    INTO :R_REGRA_RTC, :R_CCLASSTRIB, :R_VIGENCIA_INI, :R_VIGENCIA_FIM, :R_PREDIBS, :R_PREDCBS, :R_LC_REDACAO
  DO
  BEGIN
    -- Determina o CST e valida (opcional)
    EXECUTE PROCEDURE VALIDA_CCLASSTRIB(:R_CCLASSTRIB, CURRENT_DATE, 'NFe')
      RETURNING_VALUES :V_OK, :V_CST_TMP, :V_RED_IBS, :V_RED_CBS;

    R_CST = :V_CST_TMP;

    SUSPEND;
  END
END^
SET TERM ; ^

COMMIT;




